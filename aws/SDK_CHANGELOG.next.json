# This file will be used by automation when cutting a release of the SDK
# to include code generator change log entries into the release notes.
# This is an auto-generated file. Do not edit.

{
  "smithy-rs": [],
  "aws-sdk-rust": [
    {
      "message": "Integrate Endpoints 2.0 into the Rust SDK. Endpoints 2.0 enables features like S3 virtual addressing & S3\nobject lambda. As part of this change, there are several breaking changes although efforts have been made to deprecate\nwhere possible to smooth the upgrade path.\n1. `aws_smithy_http::endpoint::Endpoint` and the `endpoint_resolver` methods have been deprecated. In general, these usages\n   should be replaced with usages of `endpoint_url` instead. `endpoint_url` accepts a string so an `aws_smithy_http::Endpoint`\n   does not need to be constructed. This structure and methods will be removed in a future release.\n2. The `endpoint_resolver` method on `<service>::config::Builder` now accepts a service specific endpoint resolver instead\n   of an implementation of `ResolveAwsEndpoint`. Most users will be able to replace these usages with a usage of `endpoint_url`.\n3. `ResolveAwsEndpoint` has been deprecated and will be removed in a future version of the SDK.\n4. The SDK does not support \"pseudo regions\" anymore. Specifically, regions like `iam-fips` will no longer resolve to a FIPS endpoint.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": true
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#1784",
        "smithy-rs#2074"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 5
    },
    {
      "message": "Add additional configuration parameters to `aws_sdk_s3::Config`.\n\nThe launch of endpoints 2.0 includes more configuration options for S3. The default behavior for endpoint resolution has\nbeen changed. Before, all requests hit the path-style endpoint. Going forward, all requests that can be routed to the\nvirtually hosted bucket will be routed there automatically.\n- `force_path_style`: Requests will now default to the virtually-hosted endpoint `<bucketname>.s3.<region>.amazonaws.com`\n- `use_arn_region`: Enables this client to use an ARN’s region when constructing an endpoint instead of the client’s configured region.\n- `accelerate`: Enables this client to use S3 Transfer Acceleration endpoints.\n\nNote: the AWS SDK for Rust does not currently support Multi Region Access Points (MRAP).\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": true
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#1784",
        "smithy-rs#2074"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 5
    },
    {
      "message": "Move types for AWS SDK credentials to a separate crate.\nA new AWS runtime crate called `aws-credential-types` has been introduced. Types for AWS SDK credentials have been moved to that crate from `aws-config` and `aws-types`. The new crate is placed at the top of the dependency graph among AWS runtime crates with the aim of the downstream crates having access to the types defined in it.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2108"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 5
    },
    {
      "message": "Add support for overriding profile name and profile file location across all providers. Prior to this change, each provider needed to be updated individually.\n\n### Before\n```rust\nuse aws_config::profile::{ProfileFileCredentialsProvider, ProfileFileRegionProvider};\nuse aws_config::profile::profile_file::{ProfileFiles, ProfileFileKind};\n\nlet profile_files = ProfileFiles::builder()\n    .with_file(ProfileFileKind::Credentials, \"some/path/to/credentials-file\")\n    .build();\nlet credentials_provider = ProfileFileCredentialsProvider::builder()\n    .profile_files(profile_files.clone())\n    .build();\nlet region_provider = ProfileFileRegionProvider::builder()\n    .profile_files(profile_files)\n    .build();\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .region(region_provider)\n    .load()\n    .await;\n```\n\n### After\n```rust\nuse aws_config::profile::{ProfileFileCredentialsProvider, ProfileFileRegionProvider};\nuse aws_config::profile::profile_file::{ProfileFiles, ProfileFileKind};\n\nlet profile_files = ProfileFiles::builder()\n    .with_file(ProfileFileKind::Credentials, \"some/path/to/credentials-file\")\n    .build();\nlet sdk_config = aws_config::from_env()\n    .profile_files(profile_files)\n    .load()\n    .await;\n/// ```\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2152"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 5
    },
    {
      "message": "`aws_config::profile::retry_config` && `aws_config::environment::retry_config` have been removed. Use `aws_config::default_provider::retry_config` instead.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2162"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 5
    },
    {
      "message": "Add support for resolving FIPS and dual-stack endpoints.\n\nFIPS and dual-stack endpoints can each be configured in multiple ways:\n1. Automatically from the environment and AWS profile\n2. Across all clients loaded from the same `SdkConfig` via `from_env().use_dual_stack(true).load().await`\n3. At a client level when constructing the configuration for an individual client.\n\nNote: Not all services support FIPS and dual-stack.\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2168"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 5
    },
    {
      "message": "Improve SDK credentials caching through type safety. `LazyCachingCredentialsProvider` has been renamed to `LazyCredentialsCache` and is no longer treated as a credentials provider. Furthermore, you do not create a `LazyCredentialsCache` directly, and instead you interact with `CredentialsCache`. This introduces the following breaking changes.\n\nIf you previously used `LazyCachingCredentialsProvider`, you can replace it with `CredentialsCache`.\n<details>\n<summary>Example</summary>\n\nBefore:\n```rust\nuse aws_config::meta::credentials::lazy_caching::LazyCachingCredentialsProvider;\nuse aws_types::provider::ProvideCredentials;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\nlet credentials_provider =\n    LazyCachingCredentialsProvider::builder()\n        .load(make_provider())\n        .build();\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nAfter:\n```rust\nuse aws_credential_types::cache::CredentialsCache;\nuse aws_types::provider::ProvideCredentials;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\n// Wrapping a result of `make_provider` in `LazyCredentialsCache` is done automatically.\nlet sdk_config = aws_config::from_env()\n    .credentials_cache(CredentialsCache::lazy()) // This line can be omitted because it is on by default.\n    .credentials_provider(make_provider())\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nIf you previously configured a `LazyCachingCredentialsProvider`, you can use the builder for `LazyCredentialsCache` instead.\n\nBefore:\n```rust\nuse aws_config::meta::credentials::lazy_caching::LazyCachingCredentialsProvider;\nuse aws_types::provider::ProvideCredentials;\nuse std::time::Duration;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\nlet credentials_provider =\n    LazyCachingCredentialsProvider::builder()\n        .load(make_provider())\n        .load_timeout(Duration::from_secs(60)) // Configures timeout.\n        .build();\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nAfter:\n```rust\nuse aws_credential_types::cache::CredentialsCache;\nuse aws_types::provider::ProvideCredentials;\nuse std::time::Duration;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\nlet sdk_config = aws_config::from_env()\n    .credentials_cache(\n        CredentialsCache::lazy_builder()\n            .load_timeout(Duration::from_secs(60)) // Configures timeout.\n            .into_credentials_cache(),\n    )\n    .credentials_provider(make_provider())\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nThe examples above only demonstrate how to use `credentials_cache` and `credentials_provider` methods on `aws_config::ConfigLoader` but the same code update can be applied when you interact with `aws_types::sdk_config::Builder` or the builder for a service-specific config, e.g. `aws_sdk_s3::config::Builder`.\n\n</details>\n\n\nIf you previously configured a `DefaultCredentialsChain` by calling `load_timeout`, `buffer_time`, or `default_credential_expiration` on its builder, you need to call the same set of methods on the builder for `LazyCredentialsCache` instead.\n<details>\n<summary>Example</summary>\n\nBefore:\n```rust\nuse aws_config::default_provider::credentials::DefaultCredentialsChain;\nuse std::time::Duration;\n\nlet credentials_provider = DefaultCredentialsChain::builder()\n    .buffer_time(Duration::from_secs(30))\n    .default_credential_expiration(Duration::from_secs(20 * 60))\n    .build()\n    .await;\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nAfter:\n```rust\nuse aws_config::default_provider::credentials::default_provider;\nuse aws_credential_types::cache::CredentialsCache;\nuse std::time::Duration;\n\n// Previously used methods no longer exist on the builder for `DefaultCredentialsChain`.\nlet credentials_provider = default_provider().await;\n\nlet sdk_config = aws_config::from_env()\n    .credentials_cache(\n        CredentialsCache::lazy_builder()\n            .buffer_time(Duration::from_secs(30))\n            .default_credential_expiration(Duration::from_secs(20 * 60))\n            .into_credentials_cache(),\n    )\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\n</details>\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2122",
        "smithy-rs#2227"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 5
    },
    {
      "message": "The introduction of `CredentialsCache` comes with an accompanying type `SharedCredentialsCache`, which we will store in the property bag instead of a `SharedCredentialsProvider`. As a result, `aws_http::auth:set_provider` has been updated to `aws_http::auth::set_credentials_cache`.\n\nBefore:\n```rust\nuse aws_credential_types::Credentials;\nuse aws_credential_types::provider::SharedCredentialsProvider;\nuse aws_http::auth::set_provider;\nuse aws_smithy_http::body::SdkBody;\nuse aws_smithy_http::operation;\n\nlet mut req = operation::Request::new(http::Request::new(SdkBody::from(\"some body\")));\nlet credentials = Credentials::new(\"example\", \"example\", None, None, \"my_provider_name\");\nset_provider(\n    &mut req.properties_mut(),\n    SharedCredentialsProvider::new(credentials),\n);\n```\n\nAfter:\n```rust\nuse aws_credential_types::Credentials;\nuse aws_credential_types::cache::{CredentialsCache, SharedCredentialsCache};\nuse aws_credential_types::provider::SharedCredentialsProvider;\nuse aws_http::auth::set_credentials_cache;\nuse aws_smithy_http::body::SdkBody;\nuse aws_smithy_http::operation;\n\nlet mut req = operation::Request::new(http::Request::new(SdkBody::from(\"some body\")));\nlet credentials = Credentials::new(\"example\", \"example\", None, None, \"my_provider_name\");\nlet credentials_cache = CredentialsCache::lazy_builder()\n    .into_credentials_cache()\n    .create_cache(SharedCredentialsProvider::new(credentials));\nset_credentials_cache(\n    &mut req.properties_mut(),\n    SharedCredentialsCache::new(credentials_cache),\n);\n```\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2122",
        "smithy-rs#2227"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 5
    },
    {
      "message": "Fix endpoint for s3.write_get_object_response(). This bug was introduced in 0.53.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2204"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 5
    },
    {
      "message": "Add `with_test_defaults()` and `set_test_defaults()` to `<service>::Config`. These methods fill in defaults for configuration that is mandatory to successfully send a request.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2204"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 5
    },
    {
      "message": "Request IDs can now be easily retrieved on successful responses. For example, with S3:\n```rust\n// Import the trait to get the `request_id` method on outputs\nuse aws_sdk_s3::types::RequestId;\nlet output = client.list_buckets().send().await?;\nprintln!(\"Request ID: {:?}\", output.request_id());\n```\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#76",
        "smithy-rs#2129"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Retrieving a request ID from errors now requires importing the `RequestId` trait. For example, with S3:\n```rust\nuse aws_sdk_s3::types::RequestId;\nprintln!(\"Request ID: {:?}\", error.request_id());\n```\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#76",
        "smithy-rs#2129"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "The `message()` and `code()` methods on errors have been moved into `ProvideErrorMetadata` trait. This trait will need to be imported to continue calling these.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#76",
        "smithy-rs#2129"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "The `*Error` and `*ErrorKind` types have been combined to make error matching simpler.\n<details>\n<summary>Example with S3</summary>\n**Before:**\n```rust\nlet result = client\n    .get_object()\n    .bucket(BUCKET_NAME)\n    .key(\"some-key\")\n    .send()\n    .await;\nmatch result {\n    Ok(_output) => { /* Do something with the output */ }\n    Err(err) => match err.into_service_error() {\n        GetObjectError { kind, .. } => match kind {\n            GetObjectErrorKind::InvalidObjectState(value) => println!(\"invalid object state: {:?}\", value),\n            GetObjectErrorKind::NoSuchKey(_) => println!(\"object didn't exist\"),\n        }\n        err @ GetObjectError { .. } if err.code() == Some(\"SomeUnmodeledError\") => {}\n        err @ _ => return Err(err.into()),\n    },\n}\n```\n**After:**\n```rust\n// Needed to access the `.code()` function on the error type:\nuse aws_sdk_s3::types::ProvideErrorMetadata;\nlet result = client\n    .get_object()\n    .bucket(BUCKET_NAME)\n    .key(\"some-key\")\n    .send()\n    .await;\nmatch result {\n    Ok(_output) => { /* Do something with the output */ }\n    Err(err) => match err.into_service_error() {\n        GetObjectError::InvalidObjectState(value) => {\n            println!(\"invalid object state: {:?}\", value);\n        }\n        GetObjectError::NoSuchKey(_) => {\n            println!(\"object didn't exist\");\n        }\n        err if err.code() == Some(\"SomeUnmodeledError\") => {}\n        err @ _ => return Err(err.into()),\n    },\n}\n```\n</details>\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#76",
        "smithy-rs#2129",
        "smithy-rs#2075"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "`aws_smithy_types::Error` has been renamed to `aws_smithy_types::error::ErrorMetadata`.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#76",
        "smithy-rs#2129"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Fluent builder methods on the client are now marked as deprecated when the related operation is deprecated.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": true
      },
      "author": "Velfi",
      "references": [
        "aws-sdk-rust#740"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "`SdkError` variants can now be constructed for easier unit testing.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2428",
        "smithy-rs#2208"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Add more client re-exports. Specifically, it re-exports `aws_smithy_http::body::SdkBody`, `aws_smithy_http::byte_stream::error::Error`, and `aws_smithy_http::operation::{Request, Response}`.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2437",
        "aws-sdk-rust#600"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Enable presigning for S3's `HeadObject` operation.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "Velfi",
      "references": [
        "aws-sdk-rust#753",
        "smithy-rs#2451"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "The modules in the SDK crates have been reorganized. See the [SDK Crate Reorganization Upgrade Guidance](https://github.com/awslabs/aws-sdk-rust/discussions/752) to see how to fix your code after this change.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2433"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Reconnect on transient errors.\n\nIf a transient error (timeout, 500, 503, 503) is encountered, the connection will be evicted from the pool and will not\nbe reused. This is enabled by default for all AWS services. It can be disabled by setting `RetryConfig::with_reconnect_mode`\n\nAlthough there is no API breakage from this change, it alters the client behavior in a way that may cause breakage for customers.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "aws-sdk-rust#160",
        "smithy-rs#2445"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Update MSRV to 1.66.1",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": true
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#2467"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Default connector provided by `aws-config` now respects `ConnectorSettings`.\n\nPreviously, it used the timeout settings provided by aws-config. A test from @Oliboy50 has been incorporated to verify this behavior.\n\n**Behavior Change**: Prior to this change, the Hyper client would be shared between all service clients. After this change, each service client will use its own Hyper Client.\nTo revert to the previous behavior, set `HttpConnector::Prebuilt` on `SdkConfig::http_connector`.\n",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2471",
        "smithy-rs#2333",
        "smithy-rs#2151"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Remove deprecated `ResolveAwsEndpoint` interfaces.\n[For details see the longform changelog entry](https://github.com/awslabs/aws-sdk-rust/discussions/755).\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2390",
        "smithy-rs#1784"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Increase Tokio version to 1.23.1 for all crates. This is to address [RUSTSEC-2023-0001](https://rustsec.org/advisories/RUSTSEC-2023-0001)",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2474"
      ],
      "since-commit": "562e196bbfb5c57270b2855479a5c365ba3d2dff",
      "age": 3
    },
    {
      "message": "Implement std::error::Error#source() properly for the service meta Error enum.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "abusch",
      "references": [
        "aws-sdk-rust#784"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "The outputs for event stream operations (for example, S3's SelectObjectContent) now implement the `Sync` auto-trait.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2496"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "The AWS SDK now compiles for the `wasm32-unknown-unknown` and `wasm32-wasi` targets when no default features are enabled. WebAssembly is not officially supported yet, but this is a great first step towards it!",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "eduardomourar",
      "references": [
        "smithy-rs#2254"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "S3's `GetObject` will no longer panic when checksum validation is enabled and the target object was uploaded as a multi-part upload.\nHowever, these objects cannot be checksum validated by the SDK due to the way checksums are calculated for multipart uploads.\nFor more information, see [this page](https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums).\n",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "Velfi",
      "references": [
        "aws-sdk-rust#764"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "`AppName` is now configurable from within `ConfigLoader`.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2513"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Add support for omitting session token in canonical requests for SigV4 signing.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "martinjlowm",
      "references": [
        "smithy-rs#2473"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Add `into_segments` method to `AggregatedBytes`, for zero-copy conversions.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "parker-timmerman",
      "references": [
        "smithy-rs#2525"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Fix bug where an incorrect endpoint was produced for `WriteGetObjectResponse`",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#781",
        "aws-sdk-rust#781"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Update the `std::fmt::Debug` implementation for `aws-sigv4::SigningParams` so that it will no longer print sensitive information.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": true
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#2562"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "`aws_smithy_types::date_time::Format` has been re-exported in SDK crates.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2534"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Reduce several instances of credential exposure in the SDK logs:\n- IMDS now suppresses the body of the response from logs\n- `aws-sigv4` marks the `x-amz-session-token` header as sensitive\n- STS & SSO credentials have been manually marked as sensitive which suppresses logging of response bodies for relevant operations\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2603"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Update MSRV to Rust 1.67.1",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2611"
      ],
      "since-commit": "9201176c9876c9f7bf6599f8a93fe69d25ee0f03",
      "age": 2
    },
    {
      "message": "Avoid extending IMDS credentials' expiry unconditionally, which may incorrectly extend it beyond what is originally defined; If returned credentials are not stale, use them as they are.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2687",
        "smithy-rs#2694"
      ],
      "since-commit": "3b5fc51a41700c88270145e38fa708eca72dc414",
      "age": 1
    }
  ],
  "aws-sdk-model": []
}
